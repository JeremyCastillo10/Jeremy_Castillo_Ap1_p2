@page "/C_Entrada"
@using Jeremy_Castillo_Ap1_p2.Entidades
@using Jeremy_Castillo_Ap1_p2.BLL

<EditForm Model="lista">
    <DataAnnotationsValidator/>

    <div class="card" >

        <div class="card-header">
            <h4 class="card-body">Consulta de entradas</h4>
        </div>
        

        <div class="card-body">
            <form>
                <div class="input-group d-flex align-items-end">

                    <InputSelect class="form-control col-2" @bind-Value="filtro">
                        <option value="0">Fecha</option>
                        <option value="1">Concepto</option>
                        <option value="2">EntradaId</option>

                    </InputSelect>

                    <div class = "flex-fill mx-2">
                        <label>Busqueda</label>
                        <InputText class="form-control" @bind-Value="Criterio"/>
                    </div>

                    <button type="button" class="btn btn-lg btn-primary" @onclick="Buscar"><span class="oi oi-magnifying-glass"></span>Buscar</button>
                </div>
            </form>
        </div>
        <table class="table table-light">
            <thead class="thead">
                <tr class="table">
                    <th>Id</th>
                    <th>Concepto</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in listap)
                {
                    <tr>
                        <td>@item.EntradaId</td>
                        <td>@item.Concepto</td>
                        <td><a class="btn btn-sm btn-outline-primary oi oi-eye" href="R_Empaquetado/@item.EntradaId">Ver</a></td>
                    </tr>
                }
                
            </tbody>

        </table>
    </div>
</EditForm>

@code {
    public string? filtro { get; set; }
    public string? Criterio { get; set; }
    public List<Productos> lista { get; set; } = new List<Productos>();
    
    public List<EntradaEmpacado> listap { get; set; } = new List<EntradaEmpacado>();

  [Inject]
    public EntradaEmpacadoBLL entradaEmpacadoBLL { get; set; }

    private void Buscar()
    {
        if(Criterio!=null)
        {
            switch(filtro)
            {
                case "0":
                    listap=entradaEmpacadoBLL.GetListEntrada(p => p.Fecha.ToString().Contains(Criterio.ToLower()));
                    break;
                case "1":
                    listap=entradaEmpacadoBLL.GetListEntrada(p => p.Concepto.ToString().Contains(Criterio.ToLower()));
                    break;
                case "2":
                    listap=entradaEmpacadoBLL.GetListEntrada(p => p.EntradaId.ToString().Contains(Criterio.ToLower()));
                    break;
            }
        }else
        {
            listap=entradaEmpacadoBLL.GetListEntrada(p=>true);
        }
    }

}